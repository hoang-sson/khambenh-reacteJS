{"ast":null,"code":"var _jsxFileName = \"C:\\\\HK4\\\\DoAn2024\\\\reactjs\\\\src\\\\containers\\\\System\\\\UserManage.js\";\nimport React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport \"./UserManage.scss\";\nimport { getAllUsers } from \"../../services/userService\";\nimport ModalUser from \"./ModalUsers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserManage extends Component {\n  // state = {};\n  constructor(props) {\n    super(props);\n\n    this.getAllUsersFromReact = async () => {\n      let response = await getAllUsers(\"All\");\n\n      if (response && response.errCode === 0) {\n        this.setState({\n          arrUsers: response.users\n        });\n      }\n    };\n\n    this.handleAddNewUser = () => {\n      this.setState({\n        isOpenModalUser: true\n      });\n    };\n\n    this.toggleUserModal = () => {\n      this.setState({\n        isOpenModalUser: !this.state.isOpenModalUser\n      });\n    };\n\n    this.createNewUser = data => {\n      alert('Create new user');\n    };\n\n    this.state = {\n      arrUsers: [],\n      isOpenModalUser: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getAllUsersFromReact;\n  }\n\n  render() {\n    let arrUsers = this.state.arrUsers;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-container\",\n      children: [/*#__PURE__*/_jsxDEV(ModalUser, {\n        isOpen: this.state.isOpenModalUser,\n        toggleFromParent: this.toggleUserModal,\n        createNewUser: this.createNewUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title text-center\",\n        children: \"Manage users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-1\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary px-3\",\n          onClick: () => this.handleAddNewUser(),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), \" Add new users\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-table mt-3 mx-1\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"customers\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), arrUsers && arrUsers.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-edit\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-pencil-alt\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-delete\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-trash\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);","map":{"version":3,"sources":["C:/HK4/DoAn2024/reactjs/src/containers/System/UserManage.js"],"names":["React","Component","FormattedMessage","connect","getAllUsers","ModalUser","UserManage","constructor","props","getAllUsersFromReact","response","errCode","setState","arrUsers","users","handleAddNewUser","isOpenModalUser","toggleUserModal","state","createNewUser","data","alert","componentDidMount","render","map","item","index","email","firstName","lastName","address","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./UserManage.scss\";\r\nimport { getAllUsers } from \"../../services/userService\";\r\nimport ModalUser from \"./ModalUsers\";\r\n\r\nclass UserManage extends Component {\r\n  // state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrUsers: [],\r\n      isOpenModalUser: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.props.getAllUsersFromReact\r\n  }\r\n\r\n  getAllUsersFromReact= async () =>{\r\n    let response = await getAllUsers(\"All\");\r\n    if (response && response.errCode === 0) {\r\n      this.setState({\r\n        arrUsers: response.users,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleAddNewUser = () => {\r\n    this.setState({\r\n      isOpenModalUser: true,\r\n    });\r\n  };\r\n\r\n  toggleUserModal = () => {\r\n    this.setState({\r\n      isOpenModalUser: !this.state.isOpenModalUser,\r\n    });\r\n  };\r\n\r\n  createNewUser = (data) => {\r\n    alert('Create new user')\r\n  };\r\n\r\n  render() {\r\n    let arrUsers = this.state.arrUsers;\r\n    return (\r\n      <div className=\"users-container\">\r\n        <ModalUser\r\n          isOpen={this.state.isOpenModalUser}\r\n          toggleFromParent={this.toggleUserModal}\r\n          createNewUser = {this.createNewUser}\r\n        />\r\n        <div className=\"title text-center\">Manage users</div>\r\n        <div className=\"mx-1\">\r\n          <button\r\n            className=\"btn btn-primary px-3\"\r\n            onClick={() => this.handleAddNewUser()}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> Add new users\r\n          </button>\r\n        </div>\r\n        <div className=\"users-table mt-3 mx-1\">\r\n          <table id=\"customers\">\r\n            <tbody>\r\n              <tr>\r\n                <th>Email</th>\r\n                <th>First name</th>\r\n                <th>Last name</th>\r\n                <th>Address</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n              {arrUsers &&\r\n                arrUsers.map((item, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{item.email}</td>\r\n                      <td>{item.firstName}</td>\r\n                      <td>{item.lastName}</td>\r\n                      <td>{item.address}</td>\r\n                      <td>\r\n                        <button className=\"btn-edit\">\r\n                          <i className=\"fas fa-pencil-alt\"></i>\r\n                        </button>\r\n                        <button className=\"btn-delete\">\r\n                          <i className=\"fas fa-trash\"></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n"]},"metadata":{},"sourceType":"module"}